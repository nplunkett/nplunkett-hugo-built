<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network-engineering on Nick Plunkett</title>
    <link>http://nickplunkett.com/tags/network-engineering/</link>
    <description>Recent content in network-engineering on Nick Plunkett</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Mar 2023 13:00:07 -0700</lastBuildDate><atom:link href="http://nickplunkett.com/tags/network-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How To: Activate Arista EOS eAPI over HTTPS with a Self Signed Certificate for NAPALM &amp; Peering Manager</title>
      <link>http://nickplunkett.com/posts/arista-eos-eapi-https-self-signed-cert/</link>
      <pubDate>Thu, 30 Mar 2023 13:00:07 -0700</pubDate>
      
      <guid>http://nickplunkett.com/posts/arista-eos-eapi-https-self-signed-cert/</guid>
      <description>I have recently been integrating Peering Manager into my network deployment at my day job in order to help automate our BGP configuration &amp;amp; management. We run Arista switches running as routers across our entire footprint.
Peering Manager has NAPALM integration built into it, both for managing and deploying configuration as well as polling device status. However, for Arista devices, this requires the Arista eAPI to be enabled on the router, and it must be running in HTTPS mode. That means you need some sort of security certificate installed.
I hadn&amp;rsquo;t dealt with this before and this wasn&amp;rsquo;t straightforward. I wasn&amp;rsquo;t able to find great documentation online for how to do this. Below is my process for generating a self signed key, then using that key to generate a self-signed certificate, then using that certificate to allow HTTPS connections to the router over the management interface for eAPI command and control.</description>
    </item>
    
    <item>
      <title>How To: Install Salt Minion on an Arista Switch that uses a Management VRF</title>
      <link>http://nickplunkett.com/posts/install-salt-minion-with-management-vrf-on-arista/</link>
      <pubDate>Fri, 24 Feb 2023 14:30:07 -0700</pubDate>
      
      <guid>http://nickplunkett.com/posts/install-salt-minion-with-management-vrf-on-arista/</guid>
      <description>Recently, as a part of network automation at $dayjob, I have been provisioning Salt across our network footprint. One particular problem I&amp;rsquo;ve run into is that we use a dedicated management VRF on all of our devices.
This was an issue because by default, commands ran on bash on the Arista software run in the default VRF, and in that state we can’t communicate with our management IP networks. There just isn’t a route to the management networks on the default routing table.
Our Salt server only has a Management VRF IP address, and we did not want to configure a proxy to make the Salt master reachable outside the Management VRF.
I had previously had no experience with management VRFs on Linux, and there were no articles that were particularly helpful in helping me to run commands specifically in the management VRF of an Arista switch, within the context of the Bash/Linux shell.</description>
    </item>
    
    <item>
      <title>A brief note on Mikrotik HeX router PoE support</title>
      <link>http://nickplunkett.com/posts/mikrotik-passive-vs-active-poe-note/</link>
      <pubDate>Wed, 15 Feb 2023 13:00:07 -0700</pubDate>
      
      <guid>http://nickplunkett.com/posts/mikrotik-passive-vs-active-poe-note/</guid>
      <description>I recently have been working on a home network buildout in my new home. One of the features I was excited to implement was PoE - power over ethernet. My main use case for PoE in my home network was going to be to power small desktop switches and routers near the wall mounted ethernet ports, in order to eliminate unnecessary wall wart style AC to DC power adapters.
I purchased a NETGEAR 16-Port Gigabit Ethernet Unmanaged PoE Switch (GS116PP), one of the highest power budget consumer level fanless switches I was able to find on the current market. It has 16 1Gb ports with a total PoE budget of 183W - more than enough for my needs for now and into the future when it will eventually need to be replaced with a 2.</description>
    </item>
    
  </channel>
</rss>
